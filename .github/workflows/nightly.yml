name: "pre-release"

on:
  push:
    branches:
      - "master"

jobs:
  pre-release:
    name: "Pre Release"
    runs-on: "ubuntu-latest"

    steps:
      # ...
      - uses: actions/checkout@v1

      - name: "Generate version"
        id: get-version
        run: |
          TAG="$(echo "$GITHUB_REF" | awk -F/ '{print $NF}')"
          echo "::set-env name=TAG::$TAG"
          echo $TAG
          echo "::set-env name=VERSION::$(cat VERSION)"
          echo "::set-output name=basic::$(cat VERSION)"
          value=$(cat difficult.txt | iconv -f ISO-8859-1; echo -e '\n# This is\\ difficult.txt\n\n'; head -20 difficult.txt | iconv -f ISO-8859-1; echo -e '\n...\n' )
          value="${value//'%'/'%25'}"
          value="${value//$'\n'/'%0A'}"
          value="${value//$'\r'/'%0D'}"
          echo "::set-env name=BODY::$value"


      - name: "Sanity check"
        run: |
          echo $VERSION
          if [[ "$VERSION" =~ ^[0-9][0-9]*[.][0-9][0-9]*([.][0-9][0-9]*)*$ ]]; then
            echo version $VERSION okay
          else
            echo version $VERSION not okay!
            exit 1
          fi
          
      - name: "Build & test"
        run: |
          echo "done!"

      - name: git
        run: |
          set -x
          echo ${VERSION}
          echo ${{ steps.get-version.outputs.basic }}
          echo "$GITHUB_REF"
          echo $TAG
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git remote -v
          git tag -f "v${{ steps.get-version.outputs.basic }}-latest"
          REMOTE="https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
          git push --force "$REMOTE" "v${{ steps.get-version.outputs.basic }}-latest"

      - uses: meeDamian/github-release@escaping
        with:
          prerelease: true
          allow_override: true
          token: ${{ secrets.GITHUB_TOKEN }}
          commitish: master
          tag: v${{ env.VERSION }}-latest
          name: Release v${{ env.VERSION }}
          body: >
            This is release v${{ steps.get-version.outputs.basic }}, an unstable build.
            ${{ env.BODY }}
          gzip: folders
          files: >
            LICENSE.txt
            content.txt
            README.md


